#!/bin/bash

#assumes it will receives the appropriate file path on alma-integrations
READER=multim4j
WRITER=solr
HERE=`dirname $0`
SCRIPTDIR=`realpath $HERE`
TDIR="/app"
SCRATCHDIR="/app/scratch"

#set up the file
pkg_file=$1

#set the url for Solr
SOLR_URL=$2
echo "Indexing into $SOLR_URL"

#copy file from alma-integrations to scratch directory
# '@' removes printing interactive session
sftp -oStrictHostKeyChecking=no -oIdentityFile=$SSH_KEY_PATH -b - $ALMA_FILES_USER@$ALMA_FILES_HOST << EOT
@get $pkg_file scratch
EOT

#gets just the file name without the parent directory info
file=${pkg_file##*/}
#filename without the filename extension
base=${file%%.*.*}
tar xzvf scratch/$file -C $SCRATCHDIR
filename_glob=`echo ${SCRATCHDIR}/${base}.xml`

ls scratch

#fetch high level browse
echo "Fetching high level browse"
output=$(bundle exec ruby bin/m_get_high_level_browse.rb)
echo $output

#fetch library and locations
echo "Updating libLocInfo.yaml"
output=$(bundle exec ruby bin/lib_loc_info.rb --path ./lib/translation_maps/umich/libLocInfo.yaml)
echo $output

#run index the file
cmd="bundle exec traject 
  -c $TDIR/readers/$READER.rb 
  -c $TDIR/writers/$WRITER.rb 
  -c $TDIR/indexers/common.rb 
  -c $TDIR/indexers/common_ht.rb
  -c $TDIR/indexers/subject_topic.rb
  -c $TDIR/indexers/umich.rb 
  -c $TDIR/indexers/umich_alma.rb 
  -s source_glob="${filename_glob}"
  -u $SOLR_URL
  -s log.file=STDOUT 
  $filename"

  $cmd
rm $filename_glob
rm scratch/$file
exit $?  
